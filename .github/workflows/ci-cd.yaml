name: Ecomarket CI/CD Pipeline with Helm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  validate-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-asyncio fastapi uvicorn httpx

    - name: Lint with flake8
      run: |
        flake8 . --max-line-length=120 --exclude=venv

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.9.0

    - name: Validate Helm Charts
      run: |
        helm lint charts/frontend
        helm lint charts/api1
        helm lint charts/api2
        helm lint charts/gateway

    - name: Run Tests
      run: |
        # Testes para frontend
        cd charts/frontend/app/
        pytest tests/ -v --import-mode=prepend
        # Testes para api1
        cd ../../api1/app/
        pytest tests/ -v --import-mode=prepend
        # Testes para api2
        cd ../../api2/app/
        pytest tests/ -v --import-mode=prepend

  build-and-push:
    needs: validate-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./charts/frontend/app/  # Ajustado para charts/frontend/app/
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push API1 image
      uses: docker/build-push-action@v4
      with:
        context: ./charts/api1/app/  # Ajustado para charts/api1/app/
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api1:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push API2 image
      uses: docker/build-push-action@v4
      with:
        context: ./charts/api2/app/  # Ajustado para charts/api2/app/
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api2:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}

  update-helm-charts:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Update Helm values with new image tags
      run: |
        sed -i "s|tag: .*|tag: ${{ github.sha }}|" charts/frontend/values.yaml
        sed -i "s|tag: .*|tag: ${{ github.sha }}|" charts/api1/values.yaml
        sed -i "s|tag: .*|tag: ${{ github.sha }}|" charts/api2/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add charts/frontend/values.yaml charts/api1/values.yaml charts/api2/values.yaml
        git commit -m "Update Helm chart image tags to ${{ github.sha }}"
        git push

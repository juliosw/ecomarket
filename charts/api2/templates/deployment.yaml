apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      version: v1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        version: v1
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        env:
        - name: DB_HOST
          value: "postgres-postgres-service.default.svc.cluster.local"  # Ajustado
        - name: DB_NAME
          value: "ecomarket_db"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-config
              key: LOG_LEVEL
        - name: API_TOKEN
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-config
              key: apiToken
        readinessProbe:
          httpGet:
            path: /score
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /score
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
